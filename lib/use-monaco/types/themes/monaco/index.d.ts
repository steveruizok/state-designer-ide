declare const allThemes: {
    active4d: import("monaco-editor").editor.IStandaloneThemeData;
    'all-hallows-eve': import("monaco-editor").editor.IStandaloneThemeData;
    amy: import("monaco-editor").editor.IStandaloneThemeData;
    'birds-of-paradise': import("monaco-editor").editor.IStandaloneThemeData;
    blackboard: import("monaco-editor").editor.IStandaloneThemeData;
    'brilliance-black': import("monaco-editor").editor.IStandaloneThemeData;
    'brilliance-dull': import("monaco-editor").editor.IStandaloneThemeData;
    'chrome-devtools': import("monaco-editor").editor.IStandaloneThemeData;
    'clouds-midnight': import("monaco-editor").editor.IStandaloneThemeData;
    clouds: import("monaco-editor").editor.IStandaloneThemeData;
    cobalt: import("monaco-editor").editor.IStandaloneThemeData;
    dawn: import("monaco-editor").editor.IStandaloneThemeData;
    dreamweaver: import("monaco-editor").editor.IStandaloneThemeData;
    eiffel: import("monaco-editor").editor.IStandaloneThemeData;
    'espresso-libre': import("monaco-editor").editor.IStandaloneThemeData;
    github: import("monaco-editor").editor.IStandaloneThemeData;
    idle: import("monaco-editor").editor.IStandaloneThemeData;
    katzenmilch: import("monaco-editor").editor.IStandaloneThemeData;
    'kuroir-theme': import("monaco-editor").editor.IStandaloneThemeData;
    lazy: import("monaco-editor").editor.IStandaloneThemeData;
    'magicwb--amiga-': import("monaco-editor").editor.IStandaloneThemeData;
    'merbivore-soft': import("monaco-editor").editor.IStandaloneThemeData;
    merbivore: import("monaco-editor").editor.IStandaloneThemeData;
    'monokai-bright': import("monaco-editor").editor.IStandaloneThemeData;
    monokai: import("monaco-editor").editor.IStandaloneThemeData;
    'night-owl': import("monaco-editor").editor.IStandaloneThemeData;
    'oceanic-next': import("monaco-editor").editor.IStandaloneThemeData;
    'pastels-on-dark': import("monaco-editor").editor.IStandaloneThemeData;
    'slush-and-poppies': import("monaco-editor").editor.IStandaloneThemeData;
    'solarized-dark': import("monaco-editor").editor.IStandaloneThemeData;
    'solarized-light': import("monaco-editor").editor.IStandaloneThemeData;
    spacecadet: import("monaco-editor").editor.IStandaloneThemeData;
    sunburst: import("monaco-editor").editor.IStandaloneThemeData;
    'textmate--mac-classic-': import("monaco-editor").editor.IStandaloneThemeData;
    'tomorrow-night-blue': import("monaco-editor").editor.IStandaloneThemeData;
    'tomorrow-night-bright': import("monaco-editor").editor.IStandaloneThemeData;
    'tomorrow-night-eighties': import("monaco-editor").editor.IStandaloneThemeData;
    'tomorrow-night': import("monaco-editor").editor.IStandaloneThemeData;
    tomorrow: import("monaco-editor").editor.IStandaloneThemeData;
    twilight: import("monaco-editor").editor.IStandaloneThemeData;
    'upstream-sunburst': import("monaco-editor").editor.IStandaloneThemeData;
    'vibrant-ink': import("monaco-editor").editor.IStandaloneThemeData;
    'xcode-default': import("monaco-editor").editor.IStandaloneThemeData;
    zenburnesque: import("monaco-editor").editor.IStandaloneThemeData;
    iplastic: import("monaco-editor").editor.IStandaloneThemeData;
    idlefingers: import("monaco-editor").editor.IStandaloneThemeData;
    krtheme: import("monaco-editor").editor.IStandaloneThemeData;
    monoindustrial: import("monaco-editor").editor.IStandaloneThemeData;
    ocean: {
        base: string;
        inherit: boolean;
        rules: ({
            token: string;
            foreground: string;
            fontstyle?: undefined;
        } | {
            token: string;
            fontstyle: string;
            foreground?: undefined;
        } | {
            token: string;
            foreground: string;
            fontstyle: string;
        })[];
        colors: {
            focusBorder: string;
            foreground: string;
            'widget.shadow': string;
            errorForeground: string;
            'textBlockQuote.background': string;
            'textBlockQuote.border': string;
            'textCodeBlock.background': string;
            'textLink.activeForeground': string;
            'textLink.foreground': string;
            'button.background': string;
            'button.foreground': string;
            'button.hoverBackground': string;
            'dropdown.background': string;
            'dropdown.listBackground': string;
            'dropdown.border': string;
            'dropdown.foreground': string;
            'input.background': string;
            'input.border': string;
            'input.foreground': string;
            'input.placeholderForeground': string;
            'scrollbar.shadow': string;
            'badge.foreground': string;
            'badge.background': string;
            'progressBar.background': string;
            'list.activeSelectionBackground': string;
            'list.activeSelectionForeground': string;
            'list.dropBackground': string;
            'list.focusBackground': string;
            'list.hoverBackground': string;
            'list.hoverForeground': string;
            'list.inactiveSelectionBackground': string;
            'list.inactiveSelectionForeground': string;
            'activityBar.background': string;
            'activityBar.dropBackground': string;
            'activityBar.foreground': string;
            'activityBar.inactiveForeground': string;
            'activityBar.border': string;
            'activityBarBadge.background': string;
            'activityBarBadge.foreground': string;
            'activityBar.activeBorder': string;
            'sideBar.background': string;
            'sideBar.foreground': string;
            'sideBar.border': string;
            'sideBar.dropBackground': string;
            'sideBarTitle.foreground': string;
            'sideBarSectionHeader.background': string;
            'sideBarSectionHeader.foreground': string;
            'sideBarSectionHeader.border': string;
            'editorGroup.border': string;
            'editorGroupHeader.tabsBackground': string;
            'editorGroupHeader.noTabsBackground': string;
            'tab.activeBorder': string;
            'tab.activeForeground': string;
            'tab.activeBackground': string;
            'tab.activeModifiedBorder': string;
            'tab.hoverBackground': string;
            'tab.border': string;
            'tab.inactiveBackground': string;
            'tab.inactiveForeground': string;
            'tab.unfocusedActiveBorder': string;
            'tab.unfocusedActiveForeground': string;
            'editor.background': string;
            'editor.foreground': string;
            'editorLineNumber.foreground': string;
            'editorLineNumber.activeForeground': string;
            'editorCursor.foreground': string;
            'editor.selectionBackground': string;
            'editor.inactiveSelectionBackground': string;
            'editor.selectionHighlightBackground': string;
            'editor.selectionHighlightBorder': string;
            'editor.wordHighlightBackground': string;
            'editor.wordHighlightBorder': string;
            'editor.findMatchBackground': string;
            'editor.findMatchHighlightBackground': string;
            'editor.findMatchBorder': string;
            'editor.findMatchHighlightBorder': string;
            'editor.findRangeHighlightBorder': string;
            'editor.hoverHighlightBackground': string;
            'editor.lineHighlightBackground': string;
            'editor.lineHighlightBorder': string;
            'editorLink.activeForeground': string;
            'editorIndentGuide.background': string;
            'editorIndentGuide.activeBackground': string;
            'editorBracketMatch.background': string;
            'editorBracketMatch.border': string;
            'editorOverviewRuler.border': string;
            'editorOverviewRuler.modifiedForeground': string;
            'editorOverviewRuler.addedForeground': string;
            'editorOverviewRuler.deletedForeground': string;
            'editorOverviewRuler.errorForeground': string;
            'editorOverviewRuler.warningForeground': string;
            'editorError.foreground': string;
            'editorError.border': string;
            'editorWarning.foreground': string;
            'editorWarning.border': string;
            'editorInfo.foreground': string;
            'editorInfo.border': string;
            'editorHint.foreground': string;
            'editorHint.border': string;
            'editorUnnecessaryCode.border': string;
            'editorGutter.background': string;
            'editorGutter.modifiedBackground': string;
            'editorGutter.addedBackground': string;
            'editorGutter.deletedBackground': string;
            'editorSuggestWidget.background': string;
            'editorSuggestWidget.border': string;
            'editorSuggestWidget.foreground': string;
            'editorSuggestWidget.highlightForeground': string;
            'editorSuggestWidget.selectedBackground': string;
            'editorWhitespace.foreground': string;
            'editorWidget.background': string;
            'editorWidget.border': string;
            'editorWidget.resizeBorder': string;
            'menu.foreground': string;
            'menu.background': string;
            'menu.selectionForeground': string;
            'menu.selectionBackground': string;
        };
    };
    'ayu-light': {
        base: string;
        inherit: boolean;
        rules: ({
            token: string;
            foreground: string;
            fontStyle?: undefined;
        } | {
            token: string;
            fontStyle: string;
            foreground?: undefined;
        } | {
            token: string;
            foreground: string;
            fontStyle: string;
        })[];
        colors: {
            'editor.background': string;
            'editor.foreground': string;
            'editorIndentGuide.background': string;
            'editorIndentGuide.activeBackground': string;
        };
    };
    'ayu-dark': {
        base: string;
        inherit: boolean;
        rules: ({
            token: string;
            foreground: string;
            fontstyle?: undefined;
        } | {
            token: string;
            fontstyle: string;
            foreground?: undefined;
        } | {
            token: string;
            foreground: string;
            fontstyle: string;
        })[];
        colors: {
            'editor.background': string;
            'editor.foreground': string;
            'editorIndentGuide.background': string;
            'editorIndentGuide.activeBackground': string;
        };
    };
};
export declare type ThemeNames = keyof typeof allThemes;
export default allThemes;
export declare const themeNames: {
    [key: string]: string;
};
